version: '3.4'

services:

  postgres_users:
    image: postgres:11.2
    container_name: postgres_users
    ports:
      - 5432:5432
    volumes:
      - ./postgres_users/data:/var/lib/postgresql/data
      - ./postgres_users/db_password:/run/db_password
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD_FILE=/run/db_password
      - PGDATA=/var/lib/postgresql/data
    
    
  postgres_transactions:
    image: postgres:11.2
    container_name: postgres_transactions
    ports:
      - 5433:5433
    volumes:
      - ./postgres_transactions/data:/var/lib/postgresql/data
      - ./postgres_transactions/db_password:/run/db_password
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD_FILE=/run/db_password
      - PGDATA=/var/lib/postgresql/data
      - PGPORT=5433
    
  postgres_accounts:
    image: postgres:11.2
    container_name: postgres_accounts
    ports:
      - 5434:5434
    volumes:
      - ./postgres_accounts/data:/var/lib/postgresql/data
      - ./postgres_accounts/db_password:/run/db_password
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD_FILE=/run/db_password
      - PGDATA=/var/lib/postgresql/data
      - PGPORT=5434
    
        
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - 5672:5672
      - 15672:15672
  
  users.service:
    build:
      context: .
      dockerfile: Users.Service/Dockerfile
    container_name: users.service
    ports:
      - 5001:5001
    restart: always
    depends_on:
      - postgres_users
      - rabbitmq

  transactions.service:
    build:
      context: .
      dockerfile: Transactions.Service/Dockerfile
    container_name: transactions.service
    ports:
      - 5002:5002
    restart: always
    depends_on:
      - postgres_transactions
      - rabbitmq
    
  accounts.service:
    build:
      context: .
      dockerfile: Accounts.Service/Dockerfile
    container_name: accounts.service
    ports:
      - 5003:5003
    restart: always
    depends_on:
      - postgres_accounts
      - rabbitmq

  web:
    build:
      context: .
      dockerfile: web/Dockerfile
    container_name: web
    ports:
      - 5000:5000
    restart: always
    
  nginx:
    image: nginx:1.17.2
    container_name: nginx
    ports:
      - 5005:80
    volumes:
      - ./nginx:/etc/nginx/conf.d
    restart: always